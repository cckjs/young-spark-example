<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<configuration>
	<property>
	  <name>javax.jdo.option.ConnectionURL</name>
	  <value>jdbc:mysql://thadoop4:3306/hive?characterEncoding=UTF-8</value>
	  <description>JDBC connect string for a JDBC metastore</description>
	</property>

	<property>
	  <name>javax.jdo.option.ConnectionDriverName</name>
	  <value>com.mysql.jdbc.Driver</value>
	  <description>Driver class name for a JDBC metastore</description>
	</property>

	<property>
	  <name>javax.jdo.option.ConnectionUserName</name>
	  <value>root</value>
	  <description>username to use against metastore database</description>
	</property>

	<property>
	  <name>javax.jdo.option.ConnectionPassword</name>
	  <value>mysqladmin</value>
	  <description>password to use against metastore database</description>
	</property>
	
	<property>
	  <name>hive.metastore.warehouse.dir</name>
	  <value>/user/hive/warehouse/default</value>
	</property>
	
	<property>
		<name>hbase.zookeeper.quorum</name>
		<value>THadoop5:2181,THadoop6:2181,THadoop7:2181</value>
   </property>
   <!--解决数据倾斜-->
   <property>
	<name>hive.groupby.skewindata</name>
	<value>false</value>
	<description>Whether there is skew in data to optimize group by queries</description>
   </property>
   
   <!-- HIVE自行选择小表作为LEFT的左表 -->
   <property>
	<name>hive.auto.convert.join</name>
	<value>true</value>
	<description>Whether Hive enables the optimization about converting common join into mapjoin based on the input file size</description>
   </property>
   
   <!--控制在同一个sql中的不同的job是否可以同时运行-->
   <property>
	<name>hive.exec.parallel</name>
	<value>true</value>
	<description>Whether to execute jobs in parallel</description>
   </property>
   
   <property>
	<name>hive.optimize.index.groupby</name>
	<value>true</value>
	<description>Whether to enable optimization of group-by queries using Aggregate indexes.</description>
  </property>
  
  <property>
	<name>hive.optimize.skewjoin.compiletime</name>
	<value>true</value>
  </property>
  
  <property>
	<name>hive.multigroupby.singlereducer</name>
	<value>true</value>
  </property>
  
  <property>
	<name>hive.exec.compress.output</name>
	<value>true</value>
  </property>
  
  <property>
	<name>hive.merge.mapredfiles</name>
	<value>true</value>
	<description>Merge small files at the end of a map-reduce job</description>
  </property>

 <property>
  <name>hive.enforce.bucketing</name>
  <value>true</value>
  <description>Whether bucketing is enforced. If true, while inserting into the table, bucketing is enforced. </description>
 </property>
 
  <property>
	<name>hive.optimize.correlation</name>
	<value>true</value>
	<description>exploit intra-query correlations.</description>
 </property>
 
  <property>
	<name>hive.exec.mode.local.auto</name>
	<value>false</value>
	<description> Let Hive determine whether to run in local mode automatically </description>
  </property>
  
  <property>
	<name>hive.limit.optimize.enable</name>
	<value>true</value>
	<description>Whether to enable to optimization to trying a smaller subset of data for simple LIMIT first.</description>
  </property>
  
  <property>
	<name>hive.insert.into.multilevel.dirs</name>
	<value>true</value>
	<description>Where to insert into multilevel directories like "insert directory '/HIVEFT25686/chinna/' from table"</description>
  </property>
  
  <property>
	<name>hive.multi.insert.move.tasks.share.dependencies</name>
	<value>true</value>
  </property>
  
  <property>
	<name>hive.fetch.task.aggr</name>
	<value>true</value>
  </property>
  <property>
	<name>mapred.job.reuse.jvm.num.tasks</name>
	<value>-1</value>
   </property>

<property>
        <name>datanucleus.readOnlyDatastore</name>
        <value>false</value>
    </property>
    <property> 
        <name>datanucleus.fixedDatastore</name>
        <value>false</value> 
    </property>
    <property> 
        <name>datanucleus.autoCreateSchema</name> 
        <value>false</value> 
    </property>
    <property>
        <name>datanucleus.autoCreateTables</name>
        <value>false</value>
    </property>
    <property>
        <name>datanucleus.autoCreateColumns</name>
        <value>false</value>
    </property>
   <property>
	<name>hive.exec.dynamic.partition.mode</name>
	<value>nonstrict</value>
   </property> 


<property>
<name>hive.server2.authentication</name>
<value>CUSTOM</value>
</property>

<property>
<name>hive.server2.custom.authentication.class</name>
<value>com.isoftstone.auth.LoginVerify</value>
</property>


<property>
<name>hive.metastore.authorization.storage.checks</name>
<value>true</value>
</property>

<property>
<name>hive.metastore.execute.setugi</name>
<value>true</value>
</property>

<property>
<name>hive.security.authorization.enabled</name>
<value>true</value>
</property>

<property>
<name>hive.security.authorization.createtable.owner.grants</name>
<value>SELECT,DROP,ALTER</value>
</property>

<property>  
<name>hive.server2.enable.doAs</name>
<value>true</value>
</property>


<property>
<name>hive.metastore.local</name>
<value>false</value>
<description>controls whether to connect to remove metastore server or open a new metastore server in Hive Client JVM</description>
</property>
<property>
<name>hive.metastore.uris</name>
<value>thrift://10.66.202.104:9083</value>
<description></description>
</property>

<property>
<name>hive.security.authorization.task.factory</name>
<value>org.apache.hadoop.hive.ql.parse.authorization.HiveAuthorizationTaskFactoryImpl</value>
</property>

<property> 
<name>hive.semantic.analyzer.hook</name> 
<value>com.isoftstone.auth.AuthHook</value>  
</property>



</configuration>
